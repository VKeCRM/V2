//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool on 2014-07-11 at 1:46
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using VKeCRM.Common.Collections;
using VKeCRM.Framework.Business;
using VKeCRM.Portal.DataTransferObjects;
using DetailDomain = VKeCRM.Portal.DataAccess.DomainObjects.Detail;
using DetailDto = VKeCRM.Portal.DataTransferObjects.Detail;
	
namespace VKeCRM.Portal.Business.Factories
{
	internal partial class DetailFactory : FactoryBase<DetailDto, DetailDomain>
	{
		/// <summary>
		/// Converts Domain object to Data transfer object
		/// </summary>
		/// <param name="domainObject">Domain object to convert</param>
		/// <returns>Data Transfer object</returns>
		public override DetailDto CreateDto(DetailDomain domainObject)
		{
			DetailDto dataTransferObject = null;
			
			if (domainObject != null)
			{
				dataTransferObject = new DetailDto();
                dataTransferObject.DetailName = domainObject.DetailName;
                dataTransferObject.Id = domainObject.Id;
				
				#region Customized. DO NOT REGENERATE
				// Do not change region name.
				// Put custom code here.
                //TODO: Add implementation
                dataTransferObject.MasterID = domainObject.MasterID;
				#endregion
			}
			
			return dataTransferObject;
		}
	
		/// <summary>
		/// Copies data from Data transfer object to Domain object
		/// </summary>
		/// <returns></returns>
		public override void CopyToDomainObject(DetailDto dataTransferObject, DetailDomain domainObject)
		{
			if (dataTransferObject == null || domainObject == null)
				return;
			
            domainObject.DetailName = dataTransferObject.DetailName;
            domainObject.Id = dataTransferObject.Id;
            domainObject.MasterID = dataTransferObject.MasterID;
			
			#region Customized. DO NOT REGENERATE
            //TODO: Add implementation
            //!! domainObject.MasterID = dataTransferObject.MasterID;
			#endregion
			
			return;
		}
		
		/// <summary>
		/// Creates new Domain object based on the provided Data transfer object
		/// </summary>
		/// <param name="dataTransferObject">Data transfer object</param>
		/// <returns>Detached domain object</returns>
		public override DetailDomain CreateNewDomainObject(DetailDto dataTransferObject)
		{
			DetailDomain domainObject = new DetailDomain();
			CopyToDomainObject(dataTransferObject, domainObject);
			return domainObject;
		}
		
	}
}
