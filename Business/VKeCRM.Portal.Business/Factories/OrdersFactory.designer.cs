//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool on 2009-8-13 at 19:35
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using VKeCRM.Common.Collections;
using VKeCRM.Framework.Business;
using VKeCRM.Portal.DataTransferObjects;
using OrdersDomain = VKeCRM.Portal.DataAccess.DomainObjects.Orders;
using OrdersDto = VKeCRM.Portal.DataTransferObjects.Orders;

namespace VKeCRM.Portal.Business.Factories
{
	internal partial class OrdersFactory : FactoryBase<OrdersDto, OrdersDomain>
	{
		/// <summary>
		/// Converts Domain object to Data transfer object
		/// </summary>
		/// <param name="domainObject">Domain object to convert</param>
		/// <returns>Data Transfer object</returns>
		public override OrdersDto CreateDto(OrdersDomain domainObject)
		{
			OrdersDto dataTransferObject = null;

			if (domainObject != null)
			{
				dataTransferObject = new OrdersDto();
				dataTransferObject.Id = domainObject.Id;
				dataTransferObject.OrderNo = domainObject.OrderNo;
				dataTransferObject.OrderName = domainObject.OrderName;

				#region Customized. DO NOT REGENERATE
				// Do not change region name.
				// Put custom code here.
				#endregion
			}

			return dataTransferObject;
		}

		/// <summary>
		/// Creates new Domain object based on the provided Data transfer object
		/// </summary>
		/// <param name="dataTransferObject">Data transfer object</param>
		/// <returns>Detached domain object</returns>
		public override OrdersDomain CreateNewDomainObject(OrdersDto dataTransferObject)
		{
			OrdersDomain domainObject = new OrdersDomain();
			CopyToDomainObject(dataTransferObject, domainObject);
			return domainObject;
		}

	}
}

