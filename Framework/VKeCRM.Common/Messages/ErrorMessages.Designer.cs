//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VKeCRM.Common.Messages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VKeCRM.Common.Messages.ErrorMessages", typeof(ErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert method: {0} failed (SourceValue: &quot;{1}&quot;)..
        /// </summary>
        public static string ConvertException {
            get {
                return ResourceManager.GetString("ConvertException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred aquiring cryptography context..
        /// </summary>
        public static string CryptoAquireContextException {
            get {
                return ResourceManager.GetString("CryptoAquireContextException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred retrieving cryptography provider parameter..
        /// </summary>
        public static string CryptoGetProviderParamException {
            get {
                return ResourceManager.GetString("CryptoGetProviderParamException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred releasing cryptography context..
        /// </summary>
        public static string CryptoReleaseContextException {
            get {
                return ResourceManager.GetString("CryptoReleaseContextException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to send email..
        /// </summary>
        public static string EmailFailedException {
            get {
                return ResourceManager.GetString("EmailFailedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A validator with the id: &apos;{0}&apos; already exists. However, the type is not compatible..
        /// </summary>
        public static string IncompatibleValidatorExists {
            get {
                return ResourceManager.GetString("IncompatibleValidatorExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A key container named &quot;{0}&quot; does not exist or you do not have access to it..
        /// </summary>
        public static string KeyDoesNotExistsException {
            get {
                return ResourceManager.GetString("KeyDoesNotExistsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A key container named \&quot;{0}\&quot; already exists..
        /// </summary>
        public static string KeyExistsException {
            get {
                return ResourceManager.GetString("KeyExistsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private key file &apos;{0}&apos; already exists..
        /// </summary>
        public static string PrivateKeyFileAlreadyExists {
            get {
                return ResourceManager.GetString("PrivateKeyFileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name for private key is required..
        /// </summary>
        public static string PrivateKeyFilenameRequiredException {
            get {
                return ResourceManager.GetString("PrivateKeyFilenameRequiredException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public key file &apos;{0}&apos; already exists..
        /// </summary>
        public static string PublicKeyFileAlreadyExists {
            get {
                return ResourceManager.GetString("PublicKeyFileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name for public key is required..
        /// </summary>
        public static string PublicKeyFilenameRequiredException {
            get {
                return ResourceManager.GetString("PublicKeyFilenameRequiredException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown stream read error..
        /// </summary>
        public static string StreamReadError {
            get {
                return ResourceManager.GetString("StreamReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error has occurred..
        /// </summary>
        public static string UnknownException {
            get {
                return ResourceManager.GetString("UnknownException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} See inner exception for details..
        /// </summary>
        public static string Win32Exception {
            get {
                return ResourceManager.GetString("Win32Exception", resourceCulture);
            }
        }
    }
}
